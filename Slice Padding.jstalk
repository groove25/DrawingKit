// Slice Padding
// v.02d
// This command applies padding to a selected slice (or slices). To apply padding to all slices on the current page, hold the Option key when running the command.

// Copyright (c) 2013–14 Doug Downing. All rights reserved.
// Email: drawingkit@dougdowning.com // Website: www.dougdowning.com


// USER VARIABLES
// If there's a padding value that you use frequently, enter it below and it will appear as the suggested value within the User Input dialog. Alternatively, you may disable user input so that this setting will be applied automatically every time the script is run.

var padding = 20;		// Enter preferred padding
var userInput = true;	// To disable user input, set to false


// SCRIPT STARTS HERE

// Modifier keys +++++++++++++++
// Option = all slices
var modFlagOption  = Math.pow(2,19);
var modFlags = [NSEvent modifierFlags];
var modifier;
if (modFlags & modFlagOption) {modifier = "opt"}

// Check for slices on page
var docSlices = new Array();
try {
	for (var i=0; i<doc.currentPage().allSlices().count(); i++) {
		docSlices.push(doc.currentPage().allSlices().objectAtIndex(i));
	}
} catch(e) {
	var exportables = doc.currentPage().exportableLayers();
	for (var i=0; i<exportables.count(); i++) {
		if (exportables.objectAtIndex(i).className().toString() == "MSSliceLayer") {
			docSlices.push(exportables.objectAtIndex(i));
		}
	}
}

// Check for selected slices
var selectedSlices = new Array();
if (selection.count() > 0) {
	for (var i=0; i<selection.count(); i++) {
		if (selection[i].className().toString() == "MSSliceLayer") {
			selectedSlices.push(selection[i]);
		}
	}
}

// If Option key, apply padding to all slices
if (modifier == "opt" && docSlices.length > 0) {
	if (userInput == true) {
		padding = doc.askForUserInput_initialValue("Enter positive or negative value for padding", padding.toString()).integerValue();
	}
	for (var i=0; i<docSlices.length; i++) {
		//slices[i].frame().expandBy(padding); // deprecated in Sketch 3
		docSlices[i].frame().subtractX(padding); // reposition
		docSlices[i].frame().subtractY(padding);
		docSlices[i].frame().addWidth(padding*2); // resize
		docSlices[i].frame().addHeight(padding*2);
	}
}

// Otherwise, apply padding to selected slice(s)
else if (selectedSlices.length > 0) {
	if (userInput == true) {
		padding = doc.askForUserInput_initialValue("Enter positive or negative value for padding", padding.toString()).integerValue();
	}
	for (var i=0; i<selectedSlices.length; i++) {
		//selection[i].frame().expandBy(padding); // deprecated in Sketch 3
		selectedSlices[i].frame().subtractX(padding); // reposition
		selectedSlices[i].frame().subtractY(padding);
		selectedSlices[i].frame().addWidth(padding*2); // resize
		selectedSlices[i].frame().addHeight(padding*2);
		}
	// Tooltip
	if (docSlices.length > 1 && selectedSlices.length < docSlices.length) {
		doc.showMessage("Add Option key (⌥) to apply padding to all slices.");
	}
}

else if (selectedSlices.length == 0 && docSlices.length > 0) {
	doc.showMessage("Select a slice, or hold Option key (⌥) to apply padding to all slices.");
}
else {
	doc.showMessage("Choose Export or create a slice before running this command.");
}


// NOTES
// Thanks to Jeff Biggus (HyperJeff, Inc.) for help with modifier keys!

// This script is not to be distributed, shared, modified, etc. without written permission of the author. (See copyright notice above.)
// The script is provided “as is", to be used at your own risk, with no warranties of any kind, whether expressed or implied. Under no circumstances shall the author be liable for direct, indirect, special, incidental, or consequential damages resulting from the use, misuse, or inability to use this script.

// ---------------------------------------------------------------