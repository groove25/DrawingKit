// Artboard - Rotate
// v.01e
// This command allows you to change the orientation of an artboard from portrait to landscape, or vice versa. The artboard's contents will be rotated, as well as any guides. By default, the command rotates in a clockwise direction. To rotate counter-clockwise, hold the Option key. To rotate the artboard only, without contents or guides, hold the Shift key.
// TIP: For best results, flatten any artboard contents after rotating.

// Copyright (c) 2013–2014 Doug Downing. All rights reserved.
// Email: drawingkit@dougdowning.com // Website: www.dougdowning.com


// USER VARIABLES

var tooltip = true;		// To turn off the tooltip, set this to false
var clockwise = true;	// To rotate counter-clockwise, set to false
var rotateContents = true; // To rotate artboard only, set to false


// SCRIPT STARTS HERE

// Modifier keys ++++++++++++++++++
// Option: Rotate opposite the current direction
// Shift: Constrain rotation to artboard only

var modFlagOption = Math.pow(2,19);
var modFlagShift   = Math.pow(2,17);
var modFlags = [NSEvent modifierFlags];
var modifier, modifier2;
if (modFlags & modFlagOption) {(modifier = "opt") && (clockwise = !clockwise)}
if (modFlags & modFlagShift) {(modifier2 = "shift") && (rotateContents = !rotateContents)}

if (doc.currentPage().currentArtboard() != null) {

	var artboard = doc.currentPage().currentArtboard();
	var artWidth = artboard.frame().width();
	var artHeight = artboard.frame().height();
	var layers = artboard.layers();
	
	// Tooltip
	if (tooltip == true && layers.length() > 0) {
		var mostlyLessThan90;
		if (modifier != "opt" || modifier2 != "shift") {
			var lessThan90 = new Array();
			for (var i=0; i<layers.length(); i++) {
				var deg = layers[i].rotation();
				if (Math.abs(deg) < 90 || Math.abs(deg) > 270) {lessThan90.push(deg);}
			}
			if (lessThan90.length > layers.length() / 2) {
				mostlyLessThan90 = true;
			}
		}
		var message;
		if (mostlyLessThan90 == true && rotateContents == true) {
			if (modifier != "opt" && modifier2 != "shift") {
				message = "Option (⌥): Rotate opposite direction      Shift (⇧): Artboard only";
			}
			else if (modifier == "opt" && modifier2 != "shift") {
				message = "Hold Shift key to rotate artboard only";
			}
		}
		else if (rotateContents == false && modifier2 != "shift") {
			message = "Shift (⇧): Rotate contents      Opt-Shift (⌥⇧): Opposite direction";
		}
		if (message != undefined) {
			doc.showMessage(message);
		}
	}

	// Rotate contents and reposition
	if (rotateContents == true) {
		for (var i=0; i<layers.length(); i++) {
			var x = layers[i].absoluteRect().rulerX();
			var y = layers[i].absoluteRect().rulerY();
			var w = layers[i].absoluteRect().width();
			var h = layers[i].absoluteRect().height();
			var deg = layers[i].rotation();

			if (clockwise == true) {
				layers[i].setRotation(deg - 90);
				layers[i].absoluteRect().setRulerY(x);
				layers[i].absoluteRect().setRulerX(artHeight - (y + h));
			}
			else if (clockwise != true) {
				layers[i].setRotation(deg + 90);
				layers[i].absoluteRect().setRulerX(y);
				layers[i].absoluteRect().setRulerY(artWidth - (x + w));
			}
		}
	}

	// Swap dimensions (WxH) for artboard
	artboard.frame().setWidth(artHeight);
	artboard.frame().setHeight(artWidth);

	// Redraw guides
	if (rotateContents == true) {
		var xGuides = artboard.horizontalRulerData().numberOfGuides();
		var yGuides = artboard.verticalRulerData().numberOfGuides();
		if (xGuides > 0) {
			// Use X values to create Y
			var xValues = new Array();
			for (var i=0; i<xGuides; i++) {
				var x = artboard.horizontalRulerData().guideAtIndex(0);
				artboard.horizontalRulerData().removeGuideAtIndex(0);
				if (clockwise == true) {xValues.push(x);}
				else {xValues.push(artWidth - x);}
			}
			for (var i=0; i<xValues.length; i++) {
				artboard.verticalRulerData().addGuideWithValue(xValues[i]);
			}
		}
		if (yGuides > 0) {
			// Use Y values to create X
			var yValues = new Array();
			for (var i=0; i<yGuides; i++) {
				var y = artboard.verticalRulerData().guideAtIndex(0);
				artboard.verticalRulerData().removeGuideAtIndex(0);
				if (clockwise != true) {yValues.push(y);}
				else {yValues.push(artHeight - y);}
			}
			for (var i=0; i<yValues.length; i++) {
				artboard.horizontalRulerData().addGuideWithValue(yValues[i]);
			}
		}
	}

}

else {
	doc.showMessage("No artboard is selected or currently active.");
}

// NOTES
// Thanks to Jeff Biggus (HyperJeff, Inc.) for help with modifier keys!

// This script is not to be distributed, shared, modified, etc. without written permission of the author. (See copyright notice above.)
// The script is provided “as is", to be used at your own risk, with no warranties of any kind, whether expressed or implied. Under no circumstances shall the author be liable for direct, indirect, special, incidental, or consequential damages resulting from the use, misuse, or inability to use this script.

// ---------------------------------------------------------------